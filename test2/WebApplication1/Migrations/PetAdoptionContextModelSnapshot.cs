// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

namespace WebApplication1.Migrations
{
    [DbContext(typeof(PetAdoptionContext))]
    partial class PetAdoptionContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication1.Models.BreedType", b =>
                {
                    b.Property<int>("IdBreedType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdBreedType");

                    b.ToTable("BreedType");

                    b.HasData(
                        new
                        {
                            IdBreedType = 1,
                            Description = "SUPER NICE",
                            Name = "Rassel Terrier"
                        },
                        new
                        {
                            IdBreedType = 2,
                            Description = "fluffy!!!",
                            Name = "Corgi"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Pet", b =>
                {
                    b.Property<int>("IdPet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ApproximateDateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAdopted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRegistered")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBreedType")
                        .HasColumnType("int");

                    b.Property<bool>("IsMale")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("IdPet");

                    b.HasIndex("IdBreedType");

                    b.ToTable("Pet");

                    b.HasData(
                        new
                        {
                            IdPet = 1,
                            ApproximateDateOfBirth = new DateTime(2018, 8, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateAdopted = new DateTime(2020, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateRegistered = new DateTime(2019, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdBreedType = 1,
                            IsMale = true,
                            Name = "Mickey"
                        },
                        new
                        {
                            IdPet = 2,
                            ApproximateDateOfBirth = new DateTime(2019, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateAdopted = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateRegistered = new DateTime(2020, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdBreedType = 2,
                            IsMale = false,
                            Name = "Ash"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Volunteer", b =>
                {
                    b.Property<int>("IdVolunteer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<int?>("IdSupervisor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime>("StartingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("IdVolunteer");

                    b.HasIndex("IdSupervisor");

                    b.ToTable("Volunteer");

                    b.HasData(
                        new
                        {
                            IdVolunteer = 1,
                            Address = "Warsaw, Dobra 9/12",
                            Email = "alexilovepets@gmail.com",
                            Name = "Alex",
                            Phone = "+48999999999",
                            StartingDate = new DateTime(2013, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Koakoka"
                        },
                        new
                        {
                            IdVolunteer = 2,
                            Address = "Warsaw, Konarskiego 11/112",
                            Email = "johnPkskkd@gmail.com",
                            IdSupervisor = 1,
                            Name = "John",
                            Phone = "+48991111113",
                            StartingDate = new DateTime(2019, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Surname = "Plskksoakoka"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Volunteer_Pet", b =>
                {
                    b.Property<int>("IdVolunteer")
                        .HasColumnType("int");

                    b.Property<int>("IdPet")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAccepted")
                        .HasColumnType("datetime2");

                    b.HasKey("IdVolunteer", "IdPet");

                    b.HasIndex("IdPet");

                    b.ToTable("Volunteer_Pet");

                    b.HasData(
                        new
                        {
                            IdVolunteer = 1,
                            IdPet = 1,
                            DateAccepted = new DateTime(2020, 4, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdVolunteer = 2,
                            IdPet = 2,
                            DateAccepted = new DateTime(2020, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Pet", b =>
                {
                    b.HasOne("WebApplication1.Models.BreedType", null)
                        .WithMany()
                        .HasForeignKey("IdBreedType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Volunteer", b =>
                {
                    b.HasOne("WebApplication1.Models.Volunteer", "Supervisor")
                        .WithMany()
                        .HasForeignKey("IdSupervisor");
                });

            modelBuilder.Entity("WebApplication1.Models.Volunteer_Pet", b =>
                {
                    b.HasOne("WebApplication1.Models.Pet", null)
                        .WithMany()
                        .HasForeignKey("IdPet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Volunteer", null)
                        .WithMany()
                        .HasForeignKey("IdVolunteer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
